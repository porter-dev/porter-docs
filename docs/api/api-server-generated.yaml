definitions:
  BuildConfig:
    description: The build configuration for this release when using buildpacks
    properties:
      builder:
        type: string
        x-go-name: Builder
      buildpacks:
        items:
          type: string
        type: array
        x-go-name: Buildpacks
      config:
        items:
          format: uint8
          type: integer
        type: array
        x-go-name: Config
    type: object
    x-go-package: github.com/porter-dev/porter/api/types
  Chart:
    description: |-
      Chart is a helm package that contains metadata, a default config, zero or more
      optionally parameterizable templates, and zero or more charts (dependencies).
    properties:
      files:
        description: |-
          Files are miscellaneous files in a chart archive,
          e.g. README, LICENSE, etc.
        items:
          $ref: "#/definitions/File"
        type: array
        x-go-name: Files
      lock:
        $ref: "#/definitions/Lock"
      metadata:
        $ref: "#/definitions/Metadata"
      schema:
        description: Schema is an optional JSON schema for imposing structure on Values
        items:
          format: uint8
          type: integer
        type: array
        x-go-name: Schema
      templates:
        description: Templates for this chart.
        items:
          $ref: "#/definitions/File"
        type: array
        x-go-name: Templates
      values:
        additionalProperties:
          type: object
        description: Values are default config for this chart.
        type: object
        x-go-name: Values
    type: object
    x-go-package: helm.sh/helm/v3/pkg/chart
  CreateBuildConfigRequest:
    description: The build configuration for this new release
    properties:
      builder:
        description: The name of the builder to use with `pack` (Heroku or Paketo)
        type: string
        x-go-name: Builder
      buildpacks:
        description: The list of buildpacks to use for the release
        items:
          type: string
        type: array
        x-go-name: Buildpacks
      config:
        additionalProperties:
          type: object
        description: UNUSED
        type: object
        x-go-name: Config
    required:
      - builder
    type: object
    x-go-package: github.com/porter-dev/porter/api/types
  CreateGitActionConfigRequest:
    description:
      The git configuration for this new release (when deploying from a
      git repository)
    properties:
      dockerfile_path:
        description: The path to the Dockerfile in the git repository
        type: string
        x-go-name: DockerfilePath
      folder_path:
        description: The path to use as the base directory in the git repository
        type: string
        x-go-name: FolderPath
      git_branch:
        description: The branch name of the git repository
        type: string
        x-go-name: GitBranch
      git_repo:
        description: The git repo in ${owner}/${repo} form
        type: string
        x-go-name: GitRepo
      git_repo_id:
        description: The Github installation ID with access to the repository
        format: uint64
        type: integer
        x-go-name: GitRepoID
      gitlab_integration_id:
        description: The Gitlab integration ID with access to the repository
        format: uint64
        type: integer
        x-go-name: GitlabIntegrationID
      image_repo_uri:
        description: The complete image repository URI to pull from
        type: string
        x-go-name: ImageRepoURI
      registry_id:
        description: The Porter registry ID to link against
        format: uint64
        type: integer
        x-go-name: RegistryID
      should_create_workflow:
        description: Denotes if the Github workflow files need to be created
        type: boolean
        x-go-name: ShouldCreateWorkflow
    required:
      - git_repo
      - image_repo_uri
    type: object
    x-go-package: github.com/porter-dev/porter/api/types
  CreateNamespaceRequest:
    description: CreateNamespaceRequest represents the request body to create a namespace
    properties:
      name:
        description: the name of the namespace to create
        example: sampleNS
        type: string
        x-go-name: Name
    type: object
    x-go-package: github.com/porter-dev/porter/api/types
  CreateRegistryRepositoryRequest:
    properties:
      image_repo_uri:
        description: The URL to the repository of a registry (**ECR only**)
        type: string
        x-go-name: ImageRepoURI
    required:
      - image_repo_uri
    type: object
    x-go-package: github.com/porter-dev/porter/api/types
  CreateRegistryRequest:
    properties:
      acr_name:
        description: ACR name (**Azure only**)
        type: string
        x-go-name: ACRName
      acr_resource_group_name:
        description: ACR resource group name (**Azure only**)
        type: string
        x-go-name: ACRResourceGroupName
      aws_integration_id:
        description: The AWS integration ID to be used for this registry
        example: 1
        format: uint64
        minimum: 1
        type: integer
        x-go-name: AWSIntegrationID
      azure_integration_id:
        description: The Azure integration ID to be used for this registry
        example: 0
        format: uint64
        minimum: 1
        type: integer
        x-go-name: AzureIntegrationID
      basic_integration_id:
        description: The Basic integration ID to be used for this registry
        example: 0
        format: uint64
        minimum: 1
        type: integer
        x-go-name: BasicIntegrationID
      do_integration_id:
        description: The DigitalOcean integration ID to be used for this registry
        example: 0
        format: uint64
        minimum: 1
        type: integer
        x-go-name: DOIntegrationID
      gcp_integration_id:
        description: The GCP integration ID to be used for this registry
        example: 0
        format: uint64
        minimum: 1
        type: integer
        x-go-name: GCPIntegrationID
      name:
        description: Name of the container registry
        example: my-ecr-reg
        type: string
        x-go-name: Name
      url:
        description: URL of the container registry
        example: 123456789.dkr.ecr.us-west-2.amazonaws.com
        type: string
        x-go-name: URL
    required:
      - name
    type: object
    x-go-package: github.com/porter-dev/porter/api/types
  CreateRegistryResponse:
    $ref: "#/definitions/Registry"
  CreateReleaseBaseRequest:
    properties:
      name:
        description: The name of this release
        type: string
        x-go-name: Name
      repo_url:
        description: The repository URL for this release
        type: string
        x-go-name: RepoURL
      template_name:
        description: the Porter charts templated name
        type: string
        x-go-name: TemplateName
      template_version:
        description: The Porter charts template version
        type: string
        x-go-name: TemplateVersion
      values:
        additionalProperties:
          type: object
        description: The Helm values for this release
        type: object
        x-go-name: Values
    required:
      - template_name
      - template_version
      - name
    type: object
    x-go-package: github.com/porter-dev/porter/api/types
  CreateReleaseRequest:
    properties:
      build_config:
        $ref: "#/definitions/CreateBuildConfigRequest"
      git_action_config:
        $ref: "#/definitions/CreateGitActionConfigRequest"
      image_url:
        description: The repository image URL for this release
        type: string
        x-go-name: ImageURL
      name:
        description: The name of this release
        type: string
        x-go-name: Name
      repo_url:
        description: The repository URL for this release
        type: string
        x-go-name: RepoURL
      synced_env_groups:
        description: The list of synced environment groups for this release
        items:
          type: string
        type: array
        x-go-name: SyncedEnvGroups
      tags:
        description: The list of tags for this release
        items:
          type: string
        type: array
        x-go-name: Tags
      template_name:
        description: the Porter charts templated name
        type: string
        x-go-name: TemplateName
      template_version:
        description: The Porter charts template version
        type: string
        x-go-name: TemplateVersion
      values:
        additionalProperties:
          type: object
        description: The Helm values for this release
        type: object
        x-go-name: Values
    required:
      - template_name
      - template_version
      - name
      - image_url
    type: object
    x-go-package: github.com/porter-dev/porter/api/types
  CreateStackAppResourceRequest:
    properties:
      name:
        description: The name of the resource.
        type: string
        x-go-name: Name
      source_config_name:
        description: The name of the source config (must exist inside `source_configs`).
        type: string
        x-go-name: SourceConfigName
      template_name:
        description: The name of the template in the Helm registry, such as `web`
        type: string
        x-go-name: TemplateName
      template_repo_url:
        description:
          The URL of the Helm registry to pull the template from. If not
          set, this defaults to `https://charts.getporter.dev`.
        type: string
        x-go-name: TemplateRepoURL
      template_version:
        description: The version of the template in the Helm registry, such as `v0.50.0`
        type: string
        x-go-name: TemplateVersion
      values:
        additionalProperties:
          type: object
        description: The values to pass in to the template.
        type: object
        x-go-name: Values
    required:
      - template_name
      - template_version
      - name
      - source_config_name
    type: object
    x-go-package: github.com/porter-dev/porter/api/types
  CreateStackEnvGroupRequest:
    properties:
      linked_applications:
        description: |-
          The list of applications that this env group should be synced to. These applications **must** be present
          in the stack - if an env group is created from a stack, syncing to applications which are not in the stack
          is not supported
        items:
          type: string
        type: array
        x-go-name: LinkedApplications
      name:
        description: The name of the env group
        type: string
        x-go-name: Name
      secret_variables:
        additionalProperties:
          type: string
        description: The secret variables to set in the env group
        type: object
        x-go-name: SecretVariables
      variables:
        additionalProperties:
          type: string
        description: The non-secret variables to set in the env group
        type: object
        x-go-name: Variables
    required:
      - name
      - variables
      - secret_variables
    type: object
    x-go-package: github.com/porter-dev/porter/api/types
  CreateStackRequest:
    properties:
      app_resources:
        description:
          A list of app resources to create. An app resource is an application
          helm chart, such as a `web` or `worker` template.
        items:
          $ref: "#/definitions/CreateStackAppResourceRequest"
        type: array
        x-go-name: AppResources
      env_groups:
        description: A list of env groups which can be synced to an application
        items:
          $ref: "#/definitions/CreateStackEnvGroupRequest"
        type: array
        x-go-name: EnvGroups
      name:
        description: The display name of the stack
        type: string
        x-go-name: Name
      source_configs:
        description: |-
          A list of configurations which can build an application. Each application resource must use at least one
          source config in order to build application from source. The source config can be specified as a Docker image
          registry or linked to a remote Git repository.
        items:
          $ref: "#/definitions/CreateStackSourceConfigRequest"
        type: array
        x-go-name: SourceConfigs
    required:
      - name
      - app_resources
      - source_configs
    type: object
    x-go-package: github.com/porter-dev/porter/api/types
  CreateStackSourceConfigRequest:
    properties:
      build:
        $ref: "#/definitions/StackSourceConfigBuild"
      image_repo_uri:
        type: string
        x-go-name: ImageRepoURI
      image_tag:
        type: string
        x-go-name: ImageTag
      name:
        type: string
        x-go-name: Name
    required:
      - name
      - image_repo_uri
      - image_tag
    type: object
    x-go-package: github.com/porter-dev/porter/api/types
  Dependency:
    description: |-
      Dependencies can be used to express developer intent, or to capture the state
      of a chart.
    properties:
      alias:
        description: Alias usable alias to be used for the chart
        type: string
        x-go-name: Alias
      condition:
        description:
          A yaml path that resolves to a boolean, used for enabling/disabling
          charts (e.g. subchart1.enabled )
        type: string
        x-go-name: Condition
      enabled:
        description: Enabled bool determines if chart should be loaded
        type: boolean
        x-go-name: Enabled
      import-values:
        description: |-
          ImportValues holds the mapping of source values to parent key to be imported. Each item can be a
          string or pair of child/parent sublist items.
        items:
          type: object
        type: array
        x-go-name: ImportValues
      name:
        description: |-
          Name is the name of the dependency.

          This must mach the name in the dependency's Chart.yaml.
        type: string
        x-go-name: Name
      repository:
        description: |-
          The URL to the repository.

          Appending `index.yaml` to this string should result in a URL that can be
          used to fetch the repository index.
        type: string
        x-go-name: Repository
      tags:
        description: Tags can be used to group charts for enabling/disabling together
        items:
          type: string
        type: array
        x-go-name: Tags
      version:
        description: |-
          Version is the version (range) of this chart.

          A lock file will always produce a single version, while a dependency
          may contain a semantic version range.
        type: string
        x-go-name: Version
    title: Dependency describes a chart upon which another chart depends.
    type: object
    x-go-package: helm.sh/helm/v3/pkg/chart
  File:
    description: |-
      By convention, name is a relative path within the scope of the chart's
      base directory.
    properties:
      data:
        description: Data is the template as byte data.
        items:
          format: uint8
          type: integer
        type: array
        x-go-name: Data
      name:
        description: Name is the path-like name of the template.
        type: string
        x-go-name: Name
    title: File represents a file as a name/value pair.
    type: object
    x-go-package: helm.sh/helm/v3/pkg/chart
  FormContent:
    description: FormContent is a form's atomic unit
    properties:
      context:
        $ref: "#/definitions/FormContext"
      label:
        type: string
        x-go-name: Label
      name:
        type: string
        x-go-name: Name
      placeholder:
        type: string
        x-go-name: Placeholder
      required:
        type: boolean
        x-go-name: Required
      settings:
        properties:
          default:
            type: object
            x-go-name: Default
          disableAfterLaunch:
            type: boolean
            x-go-name: DisableAfterLaunch
          docs:
            type: string
            x-go-name: Docs
          omitUnitFromValue:
            type: boolean
            x-go-name: OmitUnitFromValue
          options:
            type: object
            x-go-name: Options
          placeholder:
            type: string
            x-go-name: Placeholder
          unit:
            type: object
            x-go-name: Unit
        type: object
        x-go-name: Settings
      type:
        type: string
        x-go-name: Type
      value:
        type: object
        x-go-name: Value
      variable:
        type: string
        x-go-name: Variable
    type: object
    x-go-package: github.com/porter-dev/porter/api/types
  FormContext:
    description: FormContext is the target context
    properties:
      config:
        additionalProperties:
          type: string
        type: object
        x-go-name: Config
      type:
        type: string
        x-go-name: Type
    type: object
    x-go-package: github.com/porter-dev/porter/api/types
  FormSection:
    description: FormSection is a section of a form
    properties:
      contents:
        items:
          $ref: "#/definitions/FormContent"
        type: array
        x-go-name: Contents
      context:
        $ref: "#/definitions/FormContext"
      name:
        type: string
        x-go-name: Name
      show_if:
        type: object
        x-go-name: ShowIf
    type: object
    x-go-package: github.com/porter-dev/porter/api/types
  FormTab:
    description: FormTab is a tab rendered in a form
    properties:
      context:
        $ref: "#/definitions/FormContext"
      label:
        type: string
        x-go-name: Label
      name:
        type: string
        x-go-name: Name
      sections:
        items:
          $ref: "#/definitions/FormSection"
        type: array
        x-go-name: Sections
      settings:
        properties:
          omitFromLaunch:
            type: boolean
            x-go-name: OmitFromLaunch
        type: object
        x-go-name: Settings
    type: object
    x-go-package: github.com/porter-dev/porter/api/types
  FormYAML:
    description: FormYAML represents a chart's values.yaml form abstraction
    properties:
      description:
        type: string
        x-go-name: Description
      hasSource:
        type: string
        x-go-name: HasSource
      icon:
        type: string
        x-go-name: Icon
      includeHiddenFields:
        type: string
        x-go-name: IncludeHiddenFields
      isClusterScoped:
        type: boolean
        x-go-name: IsClusterScoped
      name:
        type: string
        x-go-name: Name
      tabs:
        items:
          $ref: "#/definitions/FormTab"
        type: array
        x-go-name: Tabs
      tags:
        items:
          type: string
        type: array
        x-go-name: Tags
    type: object
    x-go-package: github.com/porter-dev/porter/api/types
  GetRegistryResponse:
    $ref: "#/definitions/Registry"
  GetReleaseResponse:
    $ref: "#/definitions/Release"
  GitActionConfig:
    description:
      The git configuration for this release (when deployed from a git
      repository)
    properties:
      dockerfile_path:
        description: The path to the dockerfile in the git repo
        type: string
        x-go-name: DockerfilePath
      folder_path:
        description: The build context
        type: string
        x-go-name: FolderPath
      git_branch:
        description: The git branch to use
        type: string
        x-go-name: GitBranch
      git_repo:
        description: The git repo in ${owner}/${repo} form
        type: string
        x-go-name: GitRepo
      git_repo_id:
        description: The github integration ID
        format: uint64
        type: integer
        x-go-name: GitRepoID
      gitlab_integration_id:
        description: The gitlab integration ID
        format: uint64
        type: integer
        x-go-name: GitlabIntegrationID
      image_repo_uri:
        description: The complete image repository uri to pull from
        type: string
        x-go-name: ImageRepoURI
    type: object
    x-go-package: github.com/porter-dev/porter/api/types
  Hook:
    properties:
      delete_policies:
        description:
          DeletePolicies are the policies that indicate when to delete
          the hook
        items:
          $ref: "#/definitions/HookDeletePolicy"
        type: array
        x-go-name: DeletePolicies
      events:
        description: Events are the events that this hook fires on.
        items:
          $ref: "#/definitions/HookEvent"
        type: array
        x-go-name: Events
      kind:
        description: Kind is the Kubernetes kind.
        type: string
        x-go-name: Kind
      last_run:
        $ref: "#/definitions/HookExecution"
      manifest:
        description: Manifest is the manifest contents.
        type: string
        x-go-name: Manifest
      name:
        type: string
        x-go-name: Name
      path:
        description: Path is the chart-relative path to the template.
        type: string
        x-go-name: Path
      weight:
        description:
          Weight indicates the sort order for execution among similar Hook
          type
        format: int64
        type: integer
        x-go-name: Weight
    title: Hook defines a hook object.
    type: object
    x-go-package: helm.sh/helm/v3/pkg/release
  HookDeletePolicy:
    description: HookDeletePolicy specifies the hook delete policy
    type: string
    x-go-package: helm.sh/helm/v3/pkg/release
  HookEvent:
    description: HookEvent specifies the hook event
    type: string
    x-go-package: helm.sh/helm/v3/pkg/release
  HookExecution:
    properties:
      completed_at:
        description: CompletedAt indicates the date/time this hook was completed.
        format: date-time
        type: string
        x-go-name: CompletedAt
      phase:
        $ref: "#/definitions/HookPhase"
      started_at:
        description: StartedAt indicates the date/time this hook was started
        format: date-time
        type: string
        x-go-name: StartedAt
    title:
      A HookExecution records the result for the last execution of a hook for
      a given release.
    type: object
    x-go-package: helm.sh/helm/v3/pkg/release
  HookPhase:
    description: A HookPhase indicates the state of a hook execution
    type: string
    x-go-package: helm.sh/helm/v3/pkg/release
  Image:
    description: Image is a Docker image type
    properties:
      digest:
        description: The sha256 digest of the image manifest.
        type: string
        x-go-name: Digest
      manifest:
        description: The image manifest associated with the image.
        type: string
        x-go-name: Manifest
      pushed_at:
        description: When the image was pushed
        format: date-time
        type: string
        x-go-name: PushedAt
      repository_name:
        description: The name of the repository associated with the image.
        type: string
        x-go-name: RepositoryName
      tag:
        description: The tag used for the image.
        type: string
        x-go-name: Tag
    type: object
    x-go-package: github.com/porter-dev/porter/api/types
  Info:
    properties:
      deleted:
        description: Deleted tracks when this object was deleted.
        format: date-time
        type: string
        x-go-name: Deleted
      description:
        description: Description is human-friendly "log entry" about this release.
        type: string
        x-go-name: Description
      first_deployed:
        description: FirstDeployed is when the release was first deployed.
        format: date-time
        type: string
        x-go-name: FirstDeployed
      last_deployed:
        description: LastDeployed is when the release was last deployed.
        format: date-time
        type: string
        x-go-name: LastDeployed
      notes:
        description: Contains the rendered templates/NOTES.txt if available
        type: string
        x-go-name: Notes
      status:
        $ref: "#/definitions/Status"
    title: Info describes release information.
    type: object
    x-go-package: helm.sh/helm/v3/pkg/release
  ListImagesResponse:
    items:
      $ref: "#/definitions/Image"
    type: array
    x-go-name: ListImageResponse
    x-go-package: github.com/porter-dev/porter/api/types
  ListNamespacesResponse:
    description: ListNamespacesResponse represents the list of all namespaces
    items:
      $ref: "#/definitions/NamespaceResponse"
    type: array
    x-go-package: github.com/porter-dev/porter/api/types
  ListRegistriesResponse:
    items:
      $ref: "#/definitions/Registry"
    type: array
    x-go-name: RegistryListResponse
    x-go-package: github.com/porter-dev/porter/api/types
  ListRegistryRepositoriesResponse:
    items:
      $ref: "#/definitions/RegistryRepository"
    type: array
    x-go-name: ListRegistryRepositoryResponse
    x-go-package: github.com/porter-dev/porter/api/types
  ListReleasesResponse:
    items:
      $ref: "#/definitions/Release"
    type: array
    x-go-package: github.com/porter-dev/porter/api/types
  ListStackRevisionsResponse:
    items:
      $ref: "#/definitions/StackRevision"
    type: array
    x-go-package: github.com/porter-dev/porter/api/types
  Lock:
    description: It represents the state that the dependencies should be in.
    properties:
      dependencies:
        description:
          Dependencies is the list of dependencies that this lock file
          has locked.
        items:
          $ref: "#/definitions/Dependency"
        type: array
        x-go-name: Dependencies
      digest:
        description: Digest is a hash of the dependencies in Chart.yaml.
        type: string
        x-go-name: Digest
      generated:
        description: Generated is the date the lock file was last generated.
        format: date-time
        type: string
        x-go-name: Generated
    title: Lock is a lock file for dependencies.
    type: object
    x-go-package: helm.sh/helm/v3/pkg/chart
  Maintainer:
    properties:
      email:
        description: Email is an optional email address to contact the named maintainer
        type: string
        x-go-name: Email
      name:
        description: Name is a user name or organization name
        type: string
        x-go-name: Name
      url:
        description: URL is an optional URL to an address for the named maintainer
        type: string
        x-go-name: URL
    title: Maintainer describes a Chart maintainer.
    type: object
    x-go-package: helm.sh/helm/v3/pkg/chart
  Metadata:
    properties:
      annotations:
        additionalProperties:
          type: string
        description: |-
          Annotations are additional mappings uninterpreted by Helm,
          made available for inspection by other applications.
        type: object
        x-go-name: Annotations
      apiVersion:
        description: The API Version of this chart. Required.
        type: string
        x-go-name: APIVersion
      appVersion:
        description: The version of the application enclosed inside of this chart.
        type: string
        x-go-name: AppVersion
      condition:
        description: The condition to check to enable chart
        type: string
        x-go-name: Condition
      dependencies:
        description: Dependencies are a list of dependencies for a chart.
        items:
          $ref: "#/definitions/Dependency"
        type: array
        x-go-name: Dependencies
      deprecated:
        description: Whether or not this chart is deprecated
        type: boolean
        x-go-name: Deprecated
      description:
        description: A one-sentence description of the chart
        type: string
        x-go-name: Description
      home:
        description: The URL to a relevant project page, git repo, or contact person
        type: string
        x-go-name: Home
      icon:
        description: The URL to an icon file.
        type: string
        x-go-name: Icon
      keywords:
        description: A list of string keywords
        items:
          type: string
        type: array
        x-go-name: Keywords
      kubeVersion:
        description:
          KubeVersion is a SemVer constraint specifying the version of
          Kubernetes required.
        type: string
        x-go-name: KubeVersion
      maintainers:
        description: A list of name and URL/email address combinations for the maintainer(s)
        items:
          $ref: "#/definitions/Maintainer"
        type: array
        x-go-name: Maintainers
      name:
        description: The name of the chart. Required.
        type: string
        x-go-name: Name
      sources:
        description: Source is the URL to the source code of this chart
        items:
          type: string
        type: array
        x-go-name: Sources
      tags:
        description: The tags to check to enable chart
        type: string
        x-go-name: Tags
      type:
        description: "Specifies the chart type: application or library"
        type: string
        x-go-name: Type
      version:
        description: A SemVer 2 conformant version string of the chart. Required.
        type: string
        x-go-name: Version
    title: Metadata for a Chart file. This models the structure of a Chart.yaml file.
    type: object
    x-go-package: helm.sh/helm/v3/pkg/chart
  NamespaceResponse:
    description:
      NamespaceResponse represents the response type of requests to the
      namespace resource
    properties:
      creationTimestamp:
        description: the creation timestamp in UTC of the namespace in RFC 1123 format
        example: Mon, 13 Jun 2022 17:49:12 GMT
        type: string
        x-go-name: CreationTimestamp
      deletionTimestamp:
        description:
          the deletion timestamp in UTC of the namespace in RFC 1123 format,
          if the namespace is deleted
        example: Mon, 13 Jun 2022 17:49:12 GMT
        type: string
        x-go-name: DeletionTimestamp
      name:
        description: the name of the namespace
        example: default
        type: string
        x-go-name: Name
      status:
        description: the status of the namespace
        enum:
          - active
          - terminating
        example: active
        type: string
        x-go-name: Status
    type: object
    x-go-package: github.com/porter-dev/porter/api/types
  PatchStackSourceConfigRequest:
    properties:
      source_config:
        $ref: "#/definitions/UpdateStackSourceConfigRequest"
    type: object
    x-go-package: github.com/porter-dev/porter/api/types
  PorterRelease:
    properties:
      build_config:
        $ref: "#/definitions/BuildConfig"
      git_action_config:
        $ref: "#/definitions/GitActionConfig"
      id:
        description: The ID of this Porter release
        format: uint64
        type: integer
        x-go-name: ID
      image_repo_uri:
        description: The complete image repository URI for this release
        type: string
        x-go-name: ImageRepoURI
      latest_version:
        description: The latest version of this Porter release
        type: string
        x-go-name: LatestVersion
      stack_id:
        description: Whether this release is tied to a stack or not
        type: string
        x-go-name: StackID
      tags:
        description: The list of tags for this release
        items:
          type: string
        type: array
        x-go-name: Tags
      webhook_token:
        description: The webhook token used to secure Github repository webhooks
        type: string
        x-go-name: WebhookToken
    type: object
    x-go-package: github.com/porter-dev/porter/api/types
  PutStackSourceConfigRequest:
    properties:
      source_configs:
        items:
          $ref: "#/definitions/CreateStackSourceConfigRequest"
        type: array
        x-go-name: SourceConfigs
    type: object
    x-go-package: github.com/porter-dev/porter/api/types
  Registry:
    properties:
      aws_integration_id:
        description: The AWS integration that was used to create or connect the registry
        example: 1
        format: uint64
        minimum: 1
        type: integer
        x-go-name: AWSIntegrationID
      azure_integration_id:
        description:
          The Azure integration that was used to create or connect the
          registry
        example: 0
        format: uint64
        minimum: 1
        type: integer
        x-go-name: AzureIntegrationID
      basic_integration_id:
        description: The basic integration that was used to connect the registry.
        example: 0
        format: uint64
        minimum: 1
        type: integer
        x-go-name: BasicIntegrationID
      do_integration_id:
        description: |-
          The DO integration that was used to create or connect the registry:
          this points to an OAuthIntegrationID
        example: 0
        format: uint64
        minimum: 1
        type: integer
        x-go-name: DOIntegrationID
      gcp_integration_id:
        description: The GCP integration that was used to create or connect the registry
        example: 0
        format: uint64
        minimum: 1
        type: integer
        x-go-name: GCPIntegrationID
      id:
        description: The ID of the registry
        example: 2
        format: uint64
        minimum: 1
        type: integer
        x-go-name: ID
      infra_id:
        description: The infra id, if registry was provisioned with Porter
        example: 2
        format: uint64
        minimum: 1
        type: integer
        x-go-name: InfraID
      name:
        description: Name of the registry
        example: my-ecr-reg
        type: string
        x-go-name: Name
      project_id:
        description: The project that this integration belongs to
        example: 1
        format: uint64
        minimum: 1
        type: integer
        x-go-name: ProjectID
      service:
        description: The integration service for this registry
        enum:
          - gcr
          - ecr
          - acr
          - docr
          - dockerhub
        example: ecr
        type: string
        x-go-name: Service
      url:
        description: URL of the registry
        example: 123456789.dkr.ecr.us-west-2.amazonaws.com
        type: string
        x-go-name: URL
    type: object
    x-go-package: github.com/porter-dev/porter/api/types
  RegistryRepository:
    description: Repository is a collection of images
    properties:
      created_at:
        description: When the repository was created
        format: date-time
        type: string
        x-go-name: CreatedAt
      name:
        description: Name of the repository
        type: string
        x-go-name: Name
      uri:
        description: The URI of the repository
        type: string
        x-go-name: URI
    type: object
    x-go-package: github.com/porter-dev/porter/api/types
  Release:
    description: Release is a helm release with a form attached
    properties:
      build_config:
        $ref: "#/definitions/BuildConfig"
      chart:
        $ref: "#/definitions/Chart"
      config:
        additionalProperties:
          type: object
        description: |-
          Config is the set of extra Values added to the chart.
          These values override the default values inside of the chart.
        type: object
        x-go-name: Config
      form:
        $ref: "#/definitions/FormYAML"
      git_action_config:
        $ref: "#/definitions/GitActionConfig"
      hooks:
        description: Hooks are all of the hooks declared for this release.
        items:
          $ref: "#/definitions/Hook"
        type: array
        x-go-name: Hooks
      id:
        description: The ID of this Porter release
        format: uint64
        type: integer
        x-go-name: ID
      image_repo_uri:
        description: The complete image repository URI for this release
        type: string
        x-go-name: ImageRepoURI
      info:
        $ref: "#/definitions/Info"
      latest_version:
        description: The latest version of this Porter release
        type: string
        x-go-name: LatestVersion
      manifest:
        description: Manifest is the string representation of the rendered template.
        type: string
        x-go-name: Manifest
      name:
        description: Name is the name of the release
        type: string
        x-go-name: Name
      namespace:
        description: Namespace is the kubernetes namespace of the release.
        type: string
        x-go-name: Namespace
      stack_id:
        description: Whether this release is tied to a stack or not
        type: string
        x-go-name: StackID
      tags:
        description: The list of tags for this release
        items:
          type: string
        type: array
        x-go-name: Tags
      version:
        description: Version is an int which represents the revision of the release.
        format: int64
        type: integer
        x-go-name: Version
      webhook_token:
        description: The webhook token used to secure Github repository webhooks
        type: string
        x-go-name: WebhookToken
    type: object
    x-go-package: github.com/porter-dev/porter/api/types
  Stack:
    properties:
      created_at:
        description: The time that the stack was initially created
        format: date-time
        type: string
        x-go-name: CreatedAt
      id:
        description: A unique id for the stack
        type: string
        x-go-name: ID
      latest_revision:
        $ref: "#/definitions/StackRevision"
      name:
        description: The display name of the stack
        type: string
        x-go-name: Name
      namespace:
        description: The namespace that the stack was deployed to
        type: string
        x-go-name: Namespace
      revisions:
        description: The list of revisions deployed for this stack
        items:
          $ref: "#/definitions/StackRevisionMeta"
        type: array
        x-go-name: Revisions
      updated_at:
        description: The time that the stack was last updated
        format: date-time
        type: string
        x-go-name: UpdatedAt
    type: object
    x-go-package: github.com/porter-dev/porter/api/types
  StackEnvGroup:
    properties:
      created_at:
        description: The time that this resource was initially created
        format: date-time
        type: string
        x-go-name: CreatedAt
      env_group_version:
        description: The version of the env group which is being used
        format: uint64
        type: integer
        x-go-name: EnvGroupVersion
      id:
        description: The id for this resource
        type: string
        x-go-name: ID
      name:
        description: The name of the resource
        type: string
        x-go-name: Name
      stack_id:
        description: The stack ID that this resource belongs to
        type: string
        x-go-name: StackID
      stack_revision_id:
        description: The numerical revision id that this resource belongs to
        format: uint64
        type: integer
        x-go-name: StackRevisionID
      updated_at:
        description: The time that this resource was last updated
        format: date-time
        type: string
        x-go-name: UpdatedAt
    type: object
    x-go-package: github.com/porter-dev/porter/api/types
  StackListResponse:
    items:
      $ref: "#/definitions/Stack"
    type: array
    x-go-package: github.com/porter-dev/porter/api/types
  StackResource:
    properties:
      created_at:
        description: The time that this resource was initially created
        format: date-time
        type: string
        x-go-name: CreatedAt
      id:
        description: The id for this resource
        type: string
        x-go-name: ID
      name:
        description: The name of the resource
        type: string
        x-go-name: Name
      stack_app_data:
        $ref: "#/definitions/StackResourceAppData"
      stack_id:
        description: The stack ID that this resource belongs to
        type: string
        x-go-name: StackID
      stack_revision_id:
        description: The numerical revision id that this resource belongs to
        format: uint64
        type: integer
        x-go-name: StackRevisionID
      stack_source_config:
        $ref: "#/definitions/StackSourceConfig"
      updated_at:
        description: The time that this resource was last updated
        format: date-time
        type: string
        x-go-name: UpdatedAt
    type: object
    x-go-package: github.com/porter-dev/porter/api/types
  StackResourceAppData:
    properties:
      template_name:
        description: The name of the template in the Helm registry, such as `web`
        type: string
        x-go-name: TemplateName
      template_repo_url:
        description: The URL of the Helm registry to pull the template from
        type: string
        x-go-name: TemplateRepoURL
      template_version:
        description: The version of the template in the Helm registry, such as `v0.50.0`
        type: string
        x-go-name: TemplateVersion
    type: object
    x-go-package: github.com/porter-dev/porter/api/types
  StackRevision:
    properties:
      created_at:
        description: The time that this revision was created
        format: date-time
        type: string
        x-go-name: CreatedAt
      env_groups:
        description: The list of env groups scoped to this stack
        items:
          $ref: "#/definitions/StackEnvGroup"
        type: array
        x-go-name: EnvGroups
      id:
        description: The id of the revision
        format: uint64
        type: integer
        x-go-name: ID
      message:
        description: The message associated with an error or status change
        type: string
        x-go-name: Message
      reason:
        description: The reason for any error or status change
        type: string
        x-go-name: Reason
      resources:
        description: The list of resources deployed in this revision
        items:
          $ref: "#/definitions/StackResource"
        type: array
        x-go-name: Resources
      source_configs:
        description: The list of source configs deployed in this revision
        items:
          $ref: "#/definitions/StackSourceConfig"
        type: array
        x-go-name: SourceConfigs
      stack_id:
        description: The stack ID that this source config belongs to
        type: string
        x-go-name: StackID
      status:
        $ref: "#/definitions/StackRevisionStatus"
    type: object
    x-go-package: github.com/porter-dev/porter/api/types
  StackRevisionMeta:
    properties:
      created_at:
        description: The time that this revision was created
        format: date-time
        type: string
        x-go-name: CreatedAt
      id:
        description: The id of the revision
        format: uint64
        type: integer
        x-go-name: ID
      stack_id:
        description: The stack ID that this source config belongs to
        type: string
        x-go-name: StackID
      status:
        $ref: "#/definitions/StackRevisionStatus"
    type: object
    x-go-package: github.com/porter-dev/porter/api/types
  StackRevisionStatus:
    type: string
    x-go-package: github.com/porter-dev/porter/api/types
  StackRollbackRequest:
    properties:
      target_revision:
        format: uint64
        type: integer
        x-go-name: TargetRevision
    type: object
    x-go-package: github.com/porter-dev/porter/api/types
  StackSourceConfig:
    properties:
      build:
        $ref: "#/definitions/StackSourceConfigBuild"
      created_at:
        description: The time that the source configuration was initially created
        format: date-time
        type: string
        x-go-name: CreatedAt
      id:
        description: The unique id of the stack source config
        type: string
        x-go-name: ID
      image_repo_uri:
        description: The complete image repo uri used by the source
        type: string
        x-go-name: ImageRepoURI
      image_tag:
        description: The current image tag used by the application
        type: string
        x-go-name: ImageTag
      name:
        description: The display name of the stack source
        type: string
        x-go-name: Name
      stack_id:
        description: The stack ID that this source config belongs to
        type: string
        x-go-name: StackID
      stack_revision_id:
        description: The numerical revision id that this source config belongs to
        format: uint64
        type: integer
        x-go-name: StackRevisionID
      updated_at:
        description: The time that the source configuration was last updated
        format: date-time
        type: string
        x-go-name: UpdatedAt
    type: object
    x-go-package: github.com/porter-dev/porter/api/types
  StackSourceConfigBuild:
    properties:
      buildpack:
        $ref: "#/definitions/StackSourceConfigBuildPack"
      dockerfile:
        $ref: "#/definitions/StackSourceConfigBuildDockerfile"
      folder_path:
        description:
          The path to the build context (the root folder of the application).
          For example, `.` or `./app`
        type: string
        x-go-name: FolderPath
      git:
        $ref: "#/definitions/StackSourceConfigBuildGit"
      method:
        description:
          "The build method to use: can be `docker` (for dockerfiles),
          or `pack` (for buildpacks)"
        type: string
        x-go-name: Method
    required:
      - method
      - folder_path
    type: object
    x-go-package: github.com/porter-dev/porter/api/types
  StackSourceConfigBuildDockerfile:
    properties:
      dockerfile_path:
        description:
          The path to the dockerfile from the root directory. Defaults
          to `./Dockerfile`.
        type: string
        x-go-name: DockerfilePath
    type: object
    x-go-package: github.com/porter-dev/porter/api/types
  StackSourceConfigBuildGit:
    properties:
      git_branch:
        description: The git branch to use
        type: string
        x-go-name: GitBranch
      git_integration_id:
        description: The integration id of the github or gitlab integration
        format: uint64
        type: integer
        x-go-name: GitIntegrationID
      git_integration_kind:
        description: "The git integration kind: can be `github` or `gitlab`"
        type: string
        x-go-name: GitIntegrationKind
      git_repo:
        description: The git repo in ${owner}/${repo} form
        type: string
        x-go-name: GitRepo
    type: object
    x-go-package: github.com/porter-dev/porter/api/types
  StackSourceConfigBuildPack:
    properties:
      builder:
        description: The buildpack builder to use
        type: string
        x-go-name: Builder
      buildpacks:
        description: A list of buildpacks to use
        items:
          type: string
        type: array
        x-go-name: Buildpacks
    required:
      - builder
    type: object
    x-go-package: github.com/porter-dev/porter/api/types
  Status:
    description: Status is the status of a release
    type: string
    x-go-package: helm.sh/helm/v3/pkg/release
  UpdateReleaseRequest:
    properties:
      values:
        additionalProperties:
          type: object
        description: The Helm values to upgrade the release with
        type: object
        x-go-name: Values
      version:
        description: The Porter charts version to upgrade the release with
        type: string
        x-go-name: ChartVersion
    required:
      - values
    type: object
    x-go-name: V1UpgradeReleaseRequest
    x-go-package: github.com/porter-dev/porter/api/types
  UpdateStackSourceConfigRequest:
    properties:
      image_repo_uri:
        type: string
        x-go-name: ImageRepoURI
      image_tag:
        type: string
        x-go-name: ImageTag
      name:
        type: string
        x-go-name: Name
    required:
      - name
      - image_repo_uri
      - image_tag
    type: object
    x-go-package: github.com/porter-dev/porter/api/types
  V1ListImageResponse:
    properties:
      images:
        description: The list of repository images with tags
        items:
          $ref: "#/definitions/Image"
        type: array
        x-go-name: Images
      next:
        description: The next page cursor used for pagination
        type: string
        x-go-name: Next
      next_page:
        description: The next page number used for pagination (**DigitalOcean only**)
        format: uint64
        type: integer
        x-go-name: NextPage
    type: object
    x-go-package: github.com/porter-dev/porter/api/types
paths:
  /api/v1/projects/{project_id}/clusters/{cluster_id}/namespaces:
    get:
      description: |-
        Lists all namespaces in the cluster denoted by `cluster_id`. The cluster should belong to
        the project denoted by `project_id`.
      operationId: listNamespaces
      parameters:
        - description: The project id
          format: uint64
          in: path
          minimum: 1
          name: project_id
          required: true
          type: integer
          x-go-name: ProjectID
        - description: The cluster id
          format: uint64
          in: path
          minimum: 1
          name: cluster_id
          required: true
          type: integer
          x-go-name: ClusterID
      produces:
        - application/json
      responses:
        "200":
          description: Successfully listed namespaces
          schema:
            $ref: "#/definitions/ListNamespacesResponse"
        "403":
          description: Forbidden
      summary: List all namespaces
      tags:
        - Namespaces
    post:
      description: |-
        Creates a new namespace in the cluster denoted by `cluster_id`. The cluster should belong to the project
        denoted by `project_id`.
      operationId: createNamespace
      parameters:
        - description: The project id
          format: uint64
          in: path
          minimum: 1
          name: project_id
          required: true
          type: integer
          x-go-name: ProjectID
        - description: The cluster id
          format: uint64
          in: path
          minimum: 1
          name: cluster_id
          required: true
          type: integer
          x-go-name: ClusterID
        - description: The namespace to create
          in: body
          name: CreateNamespaceRequest
          schema:
            $ref: "#/definitions/CreateNamespaceRequest"
      produces:
        - application/json
      responses:
        "201":
          description: Successfully created a new namespace
          schema:
            $ref: "#/definitions/NamespaceResponse"
        "403":
          description: Forbidden
        "412":
          description: Namespace already exists
      summary: Create a new namespace
      tags:
        - Namespaces
  /api/v1/projects/{project_id}/clusters/{cluster_id}/namespaces/{namespace}:
    delete:
      description: |-
        Deletes a namespace with the name `namespace`. The namespace should belong to the cluster
        denoted by `cluster_id` which itself should belong to the project denoted by `project_id`.
        Note that this endpoint does not indicate if the namespace does not exist.
      operationId: deleteNamespace
      parameters:
        - description: The project id
          format: uint64
          in: path
          minimum: 1
          name: project_id
          required: true
          type: integer
          x-go-name: ProjectID
        - description: The cluster id
          format: uint64
          in: path
          minimum: 1
          name: cluster_id
          required: true
          type: integer
          x-go-name: ClusterID
        - description: The namespace name
          in: path
          name: namespace
          required: true
          type: string
          x-go-name: Namespace
      produces:
        - application/json
      responses:
        "200":
          description: Successfully deleted namespace
        "403":
          description: Forbidden
      summary: Delete a namespace
      tags:
        - Namespaces
    get:
      description: |-
        Gets a namespace denoted by the name `namespace`. The namespace should belong to the cluster
        denoted by `cluster_id` which itself should belong to the project denoted by `project_id`.
      operationId: getNamespace
      parameters:
        - description: The project id
          format: uint64
          in: path
          minimum: 1
          name: project_id
          required: true
          type: integer
          x-go-name: ProjectID
        - description: The cluster id
          format: uint64
          in: path
          minimum: 1
          name: cluster_id
          required: true
          type: integer
          x-go-name: ClusterID
        - description: The namespace name
          in: path
          name: namespace
          required: true
          type: string
          x-go-name: Namespace
      produces:
        - application/json
      responses:
        "200":
          description: Successfully got the namespace
          schema:
            $ref: "#/definitions/NamespaceResponse"
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get a namespace
      tags:
        - Namespaces
  /api/v1/projects/{project_id}/clusters/{cluster_id}/namespaces/{namespace}/releases:
    get:
      description: |-
        List all releases in the namespace denoted by `namespace`. The namespace should belong to the cluster
        denoted by `cluster_id` and project denoted by `project_id`.
      operationId: listReleases
      parameters:
        - description: The project id
          format: uint64
          in: path
          minimum: 1
          name: project_id
          required: true
          type: integer
          x-go-name: ProjectID
        - description: The cluster id
          format: uint64
          in: path
          minimum: 1
          name: cluster_id
          required: true
          type: integer
          x-go-name: ClusterID
        - description: The namespace name
          in: path
          name: namespace
          required: true
          type: string
          x-go-name: Namespace
        - description: the pagination limit
          example: 50
          format: int64
          in: query
          name: limit
          type: integer
          x-go-name: Limit
        - description: how many items to skip
          example: 10
          format: int64
          in: query
          name: skip
          type: integer
          x-go-name: Skip
        - description: whether to sort by date
          example: false
          in: query
          name: byDate
          type: boolean
          x-go-name: ByDate
        - description: which helm statuses to filter by
          in: query
          items:
            type: string
          name: statusFilter
          type: array
          x-go-name: StatusFilter
      produces:
        - application/json
      responses:
        "201":
          description: Successfully listed releases
          schema:
            $ref: "#/definitions/ListReleasesResponse"
        "403":
          description: Forbidden
      summary: List releases
      tags:
        - Releases
    post:
      description: |-
        Creates a new release in the namespace denoted by `namespace`. The namespace should belong to the
        cluster denoted by `cluster_id` which itself should belong to the project denoted by `project_id`.
      operationId: createRelease
      parameters:
        - description: The project id
          format: uint64
          in: path
          minimum: 1
          name: project_id
          required: true
          type: integer
          x-go-name: ProjectID
        - description: The cluster id
          format: uint64
          in: path
          minimum: 1
          name: cluster_id
          required: true
          type: integer
          x-go-name: ClusterID
        - description: The namespace name
          in: path
          name: namespace
          required: true
          type: string
          x-go-name: Namespace
        - description: The release to create
          in: body
          name: CreateReleaseRequest
          schema:
            $ref: "#/definitions/CreateReleaseRequest"
      produces:
        - application/json
      responses:
        "201":
          description: Successfully created the release
        "400":
          description: A malformed or bad request
        "403":
          description: Forbidden
        "404":
          description: A subresource was not found
        "409":
          description: A conflict occurred with another external service
        "412":
          description: A precondition failed for the request
      summary: Create a new release
      tags:
        - Releases
  /api/v1/projects/{project_id}/clusters/{cluster_id}/namespaces/{namespace}/releases/{name}/{version}:
    delete:
      description: |-
        Deletes the release with the name denoted by `name` and version denoted by `version`. The release should belong
        to the namespace denoted by `namespace` which itself should belong to the cluster denoted by `cluster_id` and project
        denoted by `project_id`.
      operationId: deleteRelease
      parameters:
        - description: The project id
          format: uint64
          in: path
          minimum: 1
          name: project_id
          required: true
          type: integer
          x-go-name: ProjectID
        - description: The registry id
          format: uint64
          in: path
          minimum: 1
          name: cluster_id
          required: true
          type: integer
          x-go-name: RegistryID
        - description: The namespace name
          in: path
          name: namespace
          required: true
          type: string
          x-go-name: Namespace
        - description: The release name
          in: path
          name: name
          required: true
          type: string
          x-go-name: Name
        - description: The release version (`0` for latest version)
          format: uint64
          in: path
          minimum: 0
          name: version
          required: true
          type: integer
          x-go-name: Version
      produces:
        - application/json
      responses:
        "200":
          description: Successfully deleted the release
        "403":
          description: Forbidden
      summary: Delete a release
      tags:
        - Releases
    get:
      description: |-
        Gets the release denoted by the name `name` and its version `version`. The release should belong to the namespace
        denoted by `namespace` which itself should belong to the cluster denoted by `cluster_id` and project
        denoted by `project_id`.
      operationId: getRelease
      parameters:
        - description: The project id
          format: uint64
          in: path
          minimum: 1
          name: project_id
          required: true
          type: integer
          x-go-name: ProjectID
        - description: The registry id
          format: uint64
          in: path
          minimum: 1
          name: cluster_id
          required: true
          type: integer
          x-go-name: RegistryID
        - description: The namespace name
          in: path
          name: namespace
          required: true
          type: string
          x-go-name: Namespace
        - description: The release name
          in: path
          name: name
          required: true
          type: string
          x-go-name: Name
        - description: The release version (`0` for latest version)
          format: uint64
          in: path
          minimum: 0
          name: version
          required: true
          type: integer
          x-go-name: Version
      produces:
        - application/json
      responses:
        "200":
          description: Successfully got the release
          schema:
            $ref: "#/definitions/GetReleaseResponse"
        "403":
          description: Forbidden
      summary: Get a release
      tags:
        - Releases
    patch:
      description: |-
        Upgrades the release with the name denoted by `name` and version denoted by `version`. The release should belong
        to the namespace denoted by `namespace` which itself should belong to the cluster denoted by `cluster_id` and project
        denoted by `project_id`.
      operationId: updateRelease
      parameters:
        - description: The project id
          format: uint64
          in: path
          minimum: 1
          name: project_id
          required: true
          type: integer
          x-go-name: ProjectID
        - description: The registry id
          format: uint64
          in: path
          minimum: 1
          name: cluster_id
          required: true
          type: integer
          x-go-name: RegistryID
        - description: The namespace name
          in: path
          name: namespace
          required: true
          type: string
          x-go-name: Namespace
        - description: The release name
          in: path
          name: name
          required: true
          type: string
          x-go-name: Name
        - description: The release version (`0` for latest version)
          format: uint64
          in: path
          minimum: 0
          name: version
          required: true
          type: integer
          x-go-name: Version
        - description: The release to update
          in: body
          name: UpdateReleaseRequest
          schema:
            $ref: "#/definitions/UpdateReleaseRequest"
      produces:
        - application/json
      responses:
        "200":
          description: Successfully updated the release
        "400":
          description: A malformed or bad request
        "403":
          description: Forbidden
      summary: Update a release
      tags:
        - Releases
  /api/v1/projects/{project_id}/clusters/{cluster_id}/namespaces/{namespace}/stacks:
    get:
      description: Lists stacks in a namespace
      operationId: listStacks
      parameters:
        - description: The project id
          format: uint64
          in: path
          minimum: 1
          name: project_id
          required: true
          type: integer
          x-go-name: ProjectID
        - description: The cluster id
          format: uint64
          in: path
          minimum: 1
          name: cluster_id
          required: true
          type: integer
          x-go-name: ClusterID
        - description: The namespace name
          in: path
          name: namespace
          required: true
          type: string
          x-go-name: Namespace
      produces:
        - application/json
      responses:
        "200":
          description: Successfully listed stacks
          schema:
            $ref: "#/definitions/StackListResponse"
        "403":
          description: Forbidden
      summary: List stacks
      tags:
        - Stacks
    post:
      operationId: createStack
      parameters:
        - description: The project id
          format: uint64
          in: path
          minimum: 1
          name: project_id
          required: true
          type: integer
          x-go-name: ProjectID
        - description: The cluster id
          format: uint64
          in: path
          minimum: 1
          name: cluster_id
          required: true
          type: integer
          x-go-name: ClusterID
        - description: The namespace name
          in: path
          name: namespace
          required: true
          type: string
          x-go-name: Namespace
        - description: The stack to create
          in: body
          name: CreateStackRequest
          schema:
            $ref: "#/definitions/CreateStackRequest"
      produces:
        - application/json
      responses:
        "201":
          description: Successfully created the stack
          schema:
            $ref: "#/definitions/Stack"
        "403":
          description: Forbidden
      summary: Create a stack
      tags:
        - Stacks
  /api/v1/projects/{project_id}/clusters/{cluster_id}/namespaces/{namespace}/stacks/{stack_id}:
    delete:
      description: Deletes a stack
      operationId: deleteStack
      parameters:
        - description: The project id
          format: uint64
          in: path
          minimum: 1
          name: project_id
          required: true
          type: integer
          x-go-name: ProjectID
        - description: The cluster id
          format: uint64
          in: path
          minimum: 1
          name: cluster_id
          required: true
          type: integer
          x-go-name: ClusterID
        - description: The namespace
          in: path
          name: namespace
          required: true
          type: string
          x-go-name: Namespace
        - description: The stack id
          in: path
          name: stack_id
          required: true
          type: string
          x-go-name: StackID
      produces:
        - application/json
      responses:
        "200":
          description: Successfully deleted the stack
        "403":
          description: Forbidden
      summary: Delete a stack
      tags:
        - Stacks
    get:
      description: Gets a stack
      operationId: getStack
      parameters:
        - description: The project id
          format: uint64
          in: path
          minimum: 1
          name: project_id
          required: true
          type: integer
          x-go-name: ProjectID
        - description: The cluster id
          format: uint64
          in: path
          minimum: 1
          name: cluster_id
          required: true
          type: integer
          x-go-name: ClusterID
        - description: The namespace
          in: path
          name: namespace
          required: true
          type: string
          x-go-name: Namespace
        - description: The stack id
          in: path
          name: stack_id
          required: true
          type: string
          x-go-name: StackID
      produces:
        - application/json
      responses:
        "200":
          description: Successfully got the stack
          schema:
            $ref: "#/definitions/Stack"
        "403":
          description: Forbidden
      summary: Get a stack
      tags:
        - Stacks
  /api/v1/projects/{project_id}/clusters/{cluster_id}/namespaces/{namespace}/stacks/{stack_id}/{revision_id}:
    get:
      description: Gets a stack revision
      operationId: getStackRevision
      parameters:
        - description: The project id
          format: uint64
          in: path
          minimum: 1
          name: project_id
          required: true
          type: integer
          x-go-name: ProjectID
        - description: The cluster id
          format: uint64
          in: path
          minimum: 1
          name: cluster_id
          required: true
          type: integer
          x-go-name: ClusterID
        - description: The namespace
          in: path
          name: namespace
          required: true
          type: string
          x-go-name: Namespace
        - description: The stack id
          in: path
          name: stack_id
          required: true
          type: string
          x-go-name: StackID
        - description: The stack revision id
          in: path
          minimum: 1
          name: revision_id
          required: true
          type: string
          x-go-name: RevisionID
      produces:
        - application/json
      responses:
        "200":
          description: Successfully got the stack revision
          schema:
            $ref: "#/definitions/StackRevision"
        "403":
          description: Forbidden
      summary: Get a stack revision
      tags:
        - Stacks
  /api/v1/projects/{project_id}/clusters/{cluster_id}/namespaces/{namespace}/stacks/{stack_id}/add_application:
    patch:
      description: Adds an application to an existing stack
      operationId: addApplication
      parameters:
        - description: The project id
          format: uint64
          in: path
          minimum: 1
          name: project_id
          required: true
          type: integer
          x-go-name: ProjectID
        - description: The cluster id
          format: uint64
          in: path
          minimum: 1
          name: cluster_id
          required: true
          type: integer
          x-go-name: ClusterID
        - description: The namespace
          in: path
          name: namespace
          required: true
          type: string
          x-go-name: Namespace
        - description: The stack id
          in: path
          name: stack_id
          required: true
          type: string
          x-go-name: StackID
        - description: The application to add
          in: body
          name: AddApplicationToStack
          schema:
            $ref: "#/definitions/CreateStackAppResourceRequest"
      produces:
        - application/json
      responses:
        "200":
          description: Successfully added the application to the stack
        "400":
          description: Stack does not have any revisions
        "403":
          description: Forbidden
      summary: Add an application to a stack
      tags:
        - Stacks
  /api/v1/projects/{project_id}/clusters/{cluster_id}/namespaces/{namespace}/stacks/{stack_id}/add_env_group:
    patch:
      description: Adds an environment group to an existing stack
      operationId: addEnvGroup
      parameters:
        - description: The project id
          format: uint64
          in: path
          minimum: 1
          name: project_id
          required: true
          type: integer
          x-go-name: ProjectID
        - description: The cluster id
          format: uint64
          in: path
          minimum: 1
          name: cluster_id
          required: true
          type: integer
          x-go-name: ClusterID
        - description: The namespace
          in: path
          name: namespace
          required: true
          type: string
          x-go-name: Namespace
        - description: The stack id
          in: path
          name: stack_id
          required: true
          type: string
          x-go-name: StackID
        - description: The environment group to add
          in: body
          name: AddEnvGroupToStack
          schema:
            $ref: "#/definitions/CreateStackEnvGroupRequest"
      produces:
        - application/json
      responses:
        "200":
          description: Successfully added the environment group to the stack
        "400":
          description: Stack does not have any revisions
        "403":
          description: Forbidden
      summary: Add an environment group to a stack
      tags:
        - Stacks
  /api/v1/projects/{project_id}/clusters/{cluster_id}/namespaces/{namespace}/stacks/{stack_id}/remove_application/{app_resource_name}:
    delete:
      description: Removes an existing application from a stack
      operationId: removeApplication
      parameters:
        - description: The project id
          format: uint64
          in: path
          minimum: 1
          name: project_id
          required: true
          type: integer
          x-go-name: ProjectID
        - description: The cluster id
          format: uint64
          in: path
          minimum: 1
          name: cluster_id
          required: true
          type: integer
          x-go-name: ClusterID
        - description: The namespace
          in: path
          name: namespace
          required: true
          type: string
          x-go-name: Namespace
        - description: The stack id
          in: path
          name: stack_id
          required: true
          type: string
          x-go-name: StackID
        - description: The name of the application
          in: path
          name: app_resource_name
          required: true
          type: string
          x-go-name: AppResourceName
      produces:
        - application/json
      responses:
        "200":
          description: Successfully deleted the application from the stack
        "400":
          description: Stack does not have any revisions
        "403":
          description: Forbidden
      summary: Remove an application from a stack
      tags:
        - Stacks
  /api/v1/projects/{project_id}/clusters/{cluster_id}/namespaces/{namespace}/stacks/{stack_id}/remove_env_group/{env_group_name}:
    delete:
      description: Removes an existing environment group from a stack
      operationId: removeEnvGroup
      parameters:
        - description: The project id
          format: uint64
          in: path
          minimum: 1
          name: project_id
          required: true
          type: integer
          x-go-name: ProjectID
        - description: The cluster id
          format: uint64
          in: path
          minimum: 1
          name: cluster_id
          required: true
          type: integer
          x-go-name: ClusterID
        - description: The namespace
          in: path
          name: namespace
          required: true
          type: string
          x-go-name: Namespace
        - description: The stack id
          in: path
          name: stack_id
          required: true
          type: string
          x-go-name: StackID
        - description: The name of the environment group
          in: path
          name: env_group_name
          required: true
          type: string
          x-go-name: EnvGroupName
      produces:
        - application/json
      responses:
        "200":
          description: Successfully deleted the environment group from the stack
        "400":
          description: Stack does not have any revisions
        "403":
          description: Forbidden
      summary: Remove an environment group from a stack
      tags:
        - Stacks
  /api/v1/projects/{project_id}/clusters/{cluster_id}/namespaces/{namespace}/stacks/{stack_id}/revisions:
    get:
      operationId: listStackRevisions
      parameters:
        - description: The project id
          format: uint64
          in: path
          minimum: 1
          name: project_id
          required: true
          type: integer
          x-go-name: ProjectID
        - description: The cluster id
          format: uint64
          in: path
          minimum: 1
          name: cluster_id
          required: true
          type: integer
          x-go-name: ClusterID
        - description: The namespace
          in: path
          name: namespace
          required: true
          type: string
          x-go-name: Namespace
        - description: The stack id
          in: path
          name: stack_id
          required: true
          type: string
          x-go-name: StackID
      produces:
        - application/json
      responses:
        "200":
          description: Successfully listed stack revisions
          schema:
            $ref: "#/definitions/ListStackRevisionsResponse"
        "403":
          description: Forbidden
      summary: List stack revisions
      tags:
        - Stacks
  /api/v1/projects/{project_id}/clusters/{cluster_id}/namespaces/{namespace}/stacks/{stack_id}/rollback:
    post:
      description: Performs a rollback for a stack
      operationId: rollbackStack
      parameters:
        - description: The project id
          format: uint64
          in: path
          minimum: 1
          name: project_id
          required: true
          type: integer
          x-go-name: ProjectID
        - description: The cluster id
          format: uint64
          in: path
          minimum: 1
          name: cluster_id
          required: true
          type: integer
          x-go-name: ClusterID
        - description: The namespace
          in: path
          name: namespace
          required: true
          type: string
          x-go-name: Namespace
        - description: The stack id
          in: path
          name: stack_id
          required: true
          type: string
          x-go-name: StackID
        - description: The target revision to roll back to
          in: body
          name: StackRollbackRequest
          schema:
            $ref: "#/definitions/StackRollbackRequest"
      produces:
        - application/json
      responses:
        "200":
          description: Successfully rolled the stack back
          schema:
            $ref: "#/definitions/Stack"
        "403":
          description: Forbidden
      summary: Rollback stack
      tags:
        - Stacks
  /api/v1/projects/{project_id}/clusters/{cluster_id}/namespaces/{namespace}/stacks/{stack_id}/source:
    put:
      description: Updates a stack's source configuration
      operationId: putStackSource
      parameters:
        - description: The project id
          format: uint64
          in: path
          minimum: 1
          name: project_id
          required: true
          type: integer
          x-go-name: ProjectID
        - description: The cluster id
          format: uint64
          in: path
          minimum: 1
          name: cluster_id
          required: true
          type: integer
          x-go-name: ClusterID
        - description: The namespace
          in: path
          name: namespace
          required: true
          type: string
          x-go-name: Namespace
        - description: The stack id
          in: path
          name: stack_id
          required: true
          type: string
          x-go-name: StackID
        - description: The source configurations to update
          in: body
          name: PutStackSourceConfigRequest
          schema:
            $ref: "#/definitions/PutStackSourceConfigRequest"
      produces:
        - application/json
      responses:
        "200":
          description: Successfully updated the source configuration
          schema:
            $ref: "#/definitions/Stack"
        "403":
          description: Forbidden
      summary: Update source configuration
      tags:
        - Stacks
  /api/v1/projects/{project_id}/registries:
    get:
      operationId: listRegistries
      parameters:
        - description: The project id
          format: uint64
          in: path
          minimum: 1
          name: project_id
          required: true
          type: integer
          x-go-name: ProjectID
        - name: registry_id
      produces:
        - application/json
      responses:
        "200":
          description: Successfully listed registries
          schema:
            $ref: "#/definitions/ListRegistriesResponse"
        "403":
          description: Forbidden
      summary: List image registries
      tags:
        - Registries
    post:
      operationId: createRegistry
      parameters:
        - description: The project id
          format: uint64
          in: path
          minimum: 1
          name: project_id
          required: true
          type: integer
          x-go-name: ProjectID
        - description: The registry to connect
          in: body
          name: CreateRegistryRequest
          schema:
            $ref: "#/definitions/CreateRegistryRequest"
      produces:
        - application/json
      responses:
        "201":
          description: Successfully connected the registry
          schema:
            $ref: "#/definitions/CreateRegistryResponse"
        "400":
          description: A malformed or bad request
        "403":
          description: Forbidden
        "404":
          description: A subresource was not found
      summary: Connect an image registry
      tags:
        - Registries
  /api/v1/projects/{project_id}/registries/{registry_id}:
    delete:
      description: |-
        Deletes a registry denoted by `registry_id`. The registry should belong to
        the project denoted by `project_id`.
      operationId: deleteRegistry
      parameters:
        - description: The project id
          format: uint64
          in: path
          minimum: 1
          name: project_id
          required: true
          type: integer
          x-go-name: ProjectID
        - description: The registry id
          format: uint64
          in: path
          minimum: 1
          name: registry_id
          required: true
          type: integer
          x-go-name: RegistryID
      produces:
        - application/json
      responses:
        "200":
          description: Successfully disconnected image registry
        "403":
          description: Forbidden
      summary: Disconnect image registry
      tags:
        - Registries
    get:
      description: |-
        Gets an image registry denoted by `registry_id`. The registry should belong to the
        project denoted by `project_id`.
      operationId: getRegistry
      parameters:
        - description: The project id
          format: uint64
          in: path
          minimum: 1
          name: project_id
          required: true
          type: integer
          x-go-name: ProjectID
        - description: The registry id
          format: uint64
          in: path
          minimum: 1
          name: registry_id
          required: true
          type: integer
          x-go-name: RegistryID
      produces:
        - application/json
      responses:
        "200":
          description: Successfully got the registry
          schema:
            $ref: "#/definitions/GetRegistryResponse"
        "403":
          description: Forbidden
      summary: Get an image registry
      tags:
        - Registries
  /api/v1/projects/{project_id}/registries/{registry_id}/repositories:
    get:
      description: |-
        Lists image repositories inside the image registry denoted by `registry_id`. The registry
        should belong to the project denoted by `project_id`.
      operationId: listRegistryRepositories
      parameters:
        - description: The project id
          format: uint64
          in: path
          minimum: 1
          name: project_id
          required: true
          type: integer
          x-go-name: ProjectID
        - description: The registry id
          format: uint64
          in: path
          minimum: 1
          name: registry_id
          required: true
          type: integer
          x-go-name: RegistryID
      produces:
        - application/json
      responses:
        "200":
          description: Successfully listed image repositories
          schema:
            $ref: "#/definitions/ListRegistryRepositoriesResponse"
        "403":
          description: Forbidden
      summary: List image repositories
      tags:
        - Registries
    post:
      description: |-
        Creates an image repository inside the registry specified by `registry_id`. This method **only** creates repositories for ECR-integrated
        repositories.
      operationId: createRegistryRepository
      parameters:
        - description: The project id
          format: uint64
          in: path
          minimum: 1
          name: project_id
          required: true
          type: integer
          x-go-name: ProjectID
        - description: The registry id
          format: uint64
          in: path
          minimum: 1
          name: registry_id
          required: true
          type: integer
          x-go-name: RegistryID
        - description: The repository to create
          in: body
          name: CreateRepositoryRequest
          schema:
            $ref: "#/definitions/CreateRegistryRepositoryRequest"
      produces:
        - application/json
      responses:
        "201":
          description: Successfully created the image repository
        "403":
          description: Forbidden
      summary: Create image repository
      tags:
        - Registries
  /api/v1/projects/{project_id}/registries/{registry_id}/repositories/{repository}:
    get:
      description: |-
        Lists all images in the image repository denoted by the name `repository`. The repository should belong
        to the registry denoted by `registry_id` which should itself belong to the project denoted by
        `project_id`.
      operationId: listRegistryImages
      parameters:
        - description: The project id
          format: uint64
          in: path
          minimum: 1
          name: project_id
          required: true
          type: integer
          x-go-name: ProjectID
        - description: The registry id
          format: uint64
          in: path
          minimum: 1
          name: registry_id
          required: true
          type: integer
          x-go-name: RegistryID
        - description: The image repository name
          in: path
          name: repository
          required: true
          type: string
        - description: |
            The number of images to list.
            For ECR images, a maximum of 1000 is allowed.
          in: query
          minimum: 1
          name: num
          type: integer
        - description: The next page string used for pagination, from a previous request.
          in: query
          name: next
          type: string
        - description: |
            The page number used for pagination, possibly from a previous request.
            (**DigitalOcean only**)
          in: query
          minimum: 1
          name: page
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: Successfully listed images
          schema:
            $ref: "#/definitions/V1ListImageResponse"
        "400":
          description: A malformed or bad request
        "403":
          description: Forbidden
      summary: List images
      tags:
        - Registries
swagger: "2.0"
